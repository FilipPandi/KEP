plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'kep.main'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch:2.3.3.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.6.RELEASE'
	compile 'org.postgresql:postgresql:42.2.5'
	compile 'io.jsonwebtoken:jjwt:0.9.1'
	runtime('org.postgresql:postgresql')
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.apache.kafka:kafka-streams'
	compile 'org.apache.kafka:kafka-clients:2.6.0'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	compile 'javax.servlet:javax.servlet-api:4.0.1'
	testImplementation 'org.springframework.security:spring-security-test'
	compile 'com.auth0:java-jwt:2.0.1'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.1'

}

test {
	useJUnitPlatform()
}
